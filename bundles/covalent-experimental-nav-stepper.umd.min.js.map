{"version":3,"sources":["ng://@covalent/experimental/nav-stepper/nav-step/nav-step.component.ts","ng://@covalent/experimental/nav-stepper/horizontal-nav-stepper/horizontal-nav-stepper.component.ts","node_modules/tslib/tslib.es6.js","ng://@covalent/experimental/nav-stepper/nav-step-header/nav-step-header.component.ts","ng://@covalent/experimental/nav-stepper/nav-stepper.module.ts"],"names":["TdNavStepComponent","_elementRef","router","_renderer","_changeDetectorRef","this","_displayStep","_displayLine","_width","_active","state","StepState","addClass","nativeElement","prototype","isRequired","isComplete","Object","defineProperty","shouldDisplay","markForCheck","undefined","ngAfterViewInit","_this","Promise","resolve","then","getBoundingClientRect","width","ngOnInit","url","routerLink","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","Router","Renderer2","ChangeDetectorRef","Input","HostBinding","TdHorizontalStepperComponent","_resizeSubscription","Subscription","EMPTY","_widthSubject","Subject","_resizing","_showLeftArrow","_showRightArrow","_leftHidden","_rightHidden","hiddenSteps","Array","merge","fromEvent","window","pipe","debounceTime","asObservable","distinctUntilChanged","subscribe","setTimeout","displayWidthAvailableSteps","ngDoCheck","next","nativeElementWidth","ngAfterContentInit","setStepSettings","ngOnDestroy","unsubscribe","element","style","getComputedStyle","borderLeft","parseInt","borderRight","marginLeft","marginRight","paddingLeft","paddingRight","_steps","length","showHiddenLeftStep","stepsArray","toArray","displayStep","splice","displayLine","push","showHiddenRightStep","pop","forEach","step","index","number","curTotStepWidth","i","activeIndex","findIndex","active","totalHidden","shift","newTotStepWidth","j","ContentChildren","extendStatics","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","TdNavStepHeaderBase","_TdNavStepHeaderMixinBase","mixinDisableRipple","mixinDisabled","TdNavStepHeaderComponent","_super","apply","arguments","__extends","__","constructor","create","tslib_1.__extends","inputs","CovalentNavStepperModule","NgModule","imports","CommonModule","MatIconModule","MatRippleModule","PortalModule","declarations","exports"],"mappings":"s4BAKS,SACI,aACA,wBAwCX,SAAAA,EAAoBC,EACVC,EACAC,EACAC,GAHUC,KAAAJ,YAAAA,EACVI,KAAAH,OAAAA,EACAG,KAAAF,UAAAA,EACAE,KAAAD,mBAAAA,EAhCFC,KAAAC,cAAwB,EACxBD,KAAAE,cAAwB,EACxBF,KAAAG,OAAiB,EACjBH,KAAAI,SAAmB,EAiBXJ,KAAAK,MAAmBC,EAajCN,KAAKF,UAAUS,SAASP,KAAKJ,YAAYY,cAAe,cA0E5D,OAvEEb,EAAAc,UAAAC,WAAA,WACE,OAAO,GAGTf,EAAAc,UAAAE,WAAA,WACE,OAAO,GAGTC,OAAAC,eAAIlB,EAAAc,UAAA,cAAW,KAAf,WACE,OAAOT,KAAKC,kBAMd,SAAgBa,GACdd,KAAKC,aAAea,EACpBd,KAAKD,mBAAmBgB,gDAG1BH,OAAAC,eAAIlB,EAAAc,UAAA,cAAW,KAAf,WACE,OAAOT,KAAKE,kBAMd,SAAgBY,GACdd,KAAKE,aAAeY,EACpBd,KAAKD,mBAAmBgB,gDAM1BH,OAAAC,eAAIlB,EAAAc,UAAA,SAAM,KAAV,WACE,OAAOT,KAAKI,yCAMdQ,OAAAC,eAAIlB,EAAAc,UAAA,QAAK,KAAT,WACE,OAAOT,KAAKG,wCAMdS,OAAAC,eACIlB,EAAAc,UAAA,iBAAc,KADlB,WAIE,OAAOT,KAAKC,aAAee,UAAY,wCAGzCrB,EAAAc,UAAAQ,gBAAA,WAAA,IAAAC,EAAAlB,KAEEmB,QAAQC,UAAUC,KAAK,WACrBH,EAAKf,OAAuBe,EAAKtB,YAAyB,cAAE0B,wBAAwBC,MACpFL,EAAKnB,mBAAmBgB,kBAI5BpB,EAAAc,UAAAe,SAAA,WAEMxB,KAAKH,OAAO4B,MAAQzB,KAAK0B,aAC3B1B,KAAKI,SAAU,wBA/GpBuB,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,8BAEVC,SAAA,ybACAC,gBAAiBC,EAAAA,wBAAwBC,8VAdvBC,EAAAA,kBAEXC,EAAAA,cAF2DC,EAAAA,iBAClCC,EAAAA,yDA8B/BC,EAAAA,MAAKV,KAAA,CAAC,6BAONU,EAAAA,MAAKV,KAAA,CAAC,2BAONU,EAAAA,MAAKV,KAAA,CAAC,oCA0DNW,EAAAA,YAAWX,KAAA,CAAC,oBAsBfjC,KC7HA6C,EAAA,WA4BE,SAAAA,EAAoB5C,EAAiCG,GAAjCC,KAAAJ,YAAAA,EAAiCI,KAAAD,mBAAAA,EAb7CC,KAAAyC,oBAAoCC,EAAAA,aAAaC,MACjD3C,KAAA4C,cAAiC,IAAIC,EAAAA,QACrC7C,KAAA8C,WAAqB,EACrB9C,KAAA+C,gBAA0B,EAC1B/C,KAAAgD,iBAA2B,EAC3BhD,KAAAiD,YAAsB,EACtBjD,KAAAkD,aAAuB,EAK/BlD,KAAAmD,YAAoC,IAAIC,MAqN1C,OAjNEZ,EAAA/B,UAAAe,SAAA,WAAA,IAAAN,EAAAlB,KACEA,KAAKyC,oBAAsBY,EAAAA,MACzBC,EAAAA,UAAUC,OAAQ,UAAUC,KAC1BC,EAAAA,aAAa,KAEfzD,KAAK4C,cAAcc,eAAeF,KAChCG,EAAAA,yBAEFC,UAAU,WACL1C,EAAK4B,YACR5B,EAAK4B,WAAY,EACjBe,WAAW,WACT3C,EAAK4C,6BACL5C,EAAK4B,WAAY,EACjB5B,EAAKnB,mBAAmBgB,gBACvB,SAKTyB,EAAA/B,UAAAsD,UAAA,WACM/D,KAAKJ,aAAeI,KAAKJ,YAAYY,eACvCR,KAAK4C,cAAcoB,KAAKhE,KAAKiE,qBAIjCzB,EAAA/B,UAAAyD,mBAAA,WACElE,KAAKmE,kBACLnE,KAAKD,mBAAmBgB,gBAG1ByB,EAAA/B,UAAA2D,YAAA,WACEpE,KAAKyC,oBAAoB4B,eAM3BzD,OAAAC,eAAI2B,EAAA/B,UAAA,qBAAkB,KAAtB,eACM6D,EAAqCtE,KAAKJ,YAAyB,cAGnE2E,EAA6BhB,OAAOiB,iBAAiBF,GACrDG,EAAqBC,SAASH,EAAME,WAAY,IAChDE,EAAsBD,SAASH,EAAMI,YAAa,IAClDC,EAAqBF,SAASH,EAAMK,WAAY,IAChDC,EAAsBH,SAASH,EAAMM,YAAa,IAClDC,EAAsBJ,SAASH,EAAMO,YAAa,IAClDC,EAAuBL,SAASH,EAAMQ,aAAc,IAExD,OAAOT,EAAQhD,wBAAwBC,MAAQkD,EAAaE,EAAcC,EAAaC,EAAcC,EAAcC,mCAMrHnE,OAAAC,eAAI2B,EAAA/B,UAAA,QAAK,KAAT,WACE,OAAOT,KAAKgF,OAAShF,KAAKgF,OAAOC,OAAS,mCAM5CrE,OAAAC,eAAI2B,EAAA/B,UAAA,gBAAa,KAAjB,WACE,OAAOT,KAAK+C,gDAMdnC,OAAAC,eAAI2B,EAAA/B,UAAA,iBAAc,KAAlB,WACE,OAAOT,KAAKgD,iDAGPR,EAAA/B,UAAAyE,mBAAP,eACMC,EAAmCnF,KAAKgF,OAAOI,UAEnDD,EAAWnF,KAAKiD,YAAc,GAAGoC,aAAc,EAC/CrF,KAAKmD,YAAYmC,OAAOtF,KAAKiD,YAAc,EAAG,GAC9CjD,KAAKiD,cAEoB,IAArBjD,KAAKiD,cACPjD,KAAK+C,gBAAiB,GAIxBoC,EAAWA,EAAWF,QAAUjF,KAAKkD,aAAe,IAAImC,aAAc,EACtEF,EAAWA,EAAWF,QAAUjF,KAAKkD,aAAe,IAAIqC,aAAc,EACtEvF,KAAKmD,YAAYqC,KAAKL,EAAWA,EAAWF,OAAS,IACrDjF,KAAKkD,eAELlD,KAAKgD,iBAAkB,GAGlBR,EAAA/B,UAAAgF,oBAAP,eACMN,EAAmCnF,KAAKgF,OAAOI,UAEnDD,EAAWA,EAAWF,OAASjF,KAAKkD,cAAcmC,aAAc,EAChEF,EAAWA,EAAWF,QAAUjF,KAAKkD,aAAe,IAAIqC,aAAc,EACtEvF,KAAKmD,YAAYuC,MACjB1F,KAAKkD,eAEqB,IAAtBlD,KAAKkD,eACPlD,KAAKgD,iBAAkB,GAIzBmC,EAAWnF,KAAKiD,aAAaoC,aAAc,EAC3CrF,KAAKmD,YAAYqC,KAAKL,EAAWnF,KAAKiD,cACtCjD,KAAKiD,cAELjD,KAAK+C,gBAAiB,GAMhBP,EAAA/B,UAAA0D,gBAAR,eACMgB,EAAmCnF,KAAKgF,OAAOI,UAC3B,EAApBD,EAAWF,SAEbE,EAAWA,EAAWF,OAAS,GAAGM,aAAc,GAGlDJ,EAAWQ,QAAQ,SAACC,EAA0BC,GAC5CD,EAAKE,OAASD,EAAQ,KAIlBrD,EAAA/B,UAAAqD,2BAAR,WAIE,QAHIiC,EAA0B,EAC1BZ,EAAmCnF,KAAKgF,OAAOI,UAE1CY,EAAYhG,KAAKmD,YAAY8B,OAAQe,EAAIb,EAAWF,OAAQe,IACnED,GAAmBZ,EAAWa,GAAGzE,UAG/B0E,EAAsBd,EAAWe,UAAU,SAACN,GAC9C,OAAuB,IAAhBA,EAAKO,SAGd,GAAInG,KAAKiE,mBAAqB8B,EAIvBE,GAAed,EAAWF,OAAS,GAAOjF,KAAKiD,YAAcgD,GAEhEjG,KAAKgD,iBAAkB,EACvBhD,KAAK+C,gBAAiB,EACtB/C,KAAKiD,cACLkC,EAAWnF,KAAKiD,YAAc,GAAGoC,aAAc,EAC/CrF,KAAKmD,YAAYqC,KAAKL,EAAWnF,KAAKmD,YAAY8B,UAEzCjF,KAAKkD,aAAeiC,EAAWF,OAASgB,IAEjDjG,KAAKgD,iBAAkB,EACvBhD,KAAK+C,gBAAiB,EACtB/C,KAAKkD,eACLiC,EAAWA,EAAWF,OAASjF,KAAKkD,cAAcmC,aAAc,EAChErF,KAAKmD,YAAYqC,KAAKL,EAAWA,EAAWF,OAASjF,KAAKkD,gBAE5DlD,KAAK8D,sCAIDsC,EAAsBpG,KAAKmD,YAAY8B,OAAS,EACpD,IAASe,EAAYI,EAAkB,GAALJ,EAAQA,IAAK,CAE7C,GAAKD,EADyBZ,EAAWa,GAAGzE,MACFvB,KAAKiE,mBAAoB,CAK5DgC,GAAed,EAAWF,OAAS,GAAwB,EAAnBjF,KAAKiD,aAC7CgD,EAAcd,EAAWF,OAAS,GAA2B,IAAtBjF,KAAKkD,cAAyC,EAAnBlD,KAAKiD,aAE1EkC,EAAWnF,KAAKiD,YAAc,GAAGoC,aAAc,EAC/CrF,KAAKmD,YAAYkD,QACjBrG,KAAKiD,cAEoB,IAArBjD,KAAKiD,cACPjD,KAAK+C,gBAAiB,IAGK,EAApB/C,KAAKkD,eAEdiC,EAAWA,EAAWF,OAASjF,KAAKkD,cAAcmC,aAAc,EAChErF,KAAKmD,YAAYuC,MACjB1F,KAAKkD,eAEqB,IAAtBlD,KAAKkD,eACPlD,KAAKgD,iBAAkB,IAK3B,QADIsD,EAA0B,EACrBC,EAAYvG,KAAKmD,YAAY8B,OAAQsB,EAAIpB,EAAWF,OAAQsB,IACnED,GAAmBnB,EAAWoB,GAAGhF,MAEnCwE,EAAkBO,OACb,GAAIN,IAAMI,EAGf,6BAlOTzE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,4BAEVC,SAAA,sVACAC,gBAAiBC,EAAAA,wBAAwBC,wLAVYC,EAAAA,kBAAnBG,EAAAA,qDAuBjCmE,EAAAA,gBAAe5E,KAAA,CAACjC,MAuNnB6C,EA/OA,GCgBIiE,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgB7F,OAAOgG,gBAClB,CAAEC,UAAW,cAAgBzD,OAAS,SAAUsD,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIG,KAAKH,EAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,MACpDJ,EAAGC,UCd5B,SAAAK,MAGaC,EAA4BC,EAAAA,mBAAmBC,EAAAA,cAAcH,IAE1EI,EAAA,SAAAC,GAAA,SAAAD,IAAA,IAAAlG,EAAA,OAAAmG,GAAAA,EAAAC,MAAAtH,KAAAuH,YAAAvH,YA6BkBkB,EAAAb,MAAmBC,IAerC,ODhCA,SAAgBkH,EAAUd,EAAGC,GAEzB,SAASc,IAAOzH,KAAK0H,YAAchB,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEjG,UAAkB,OAANkG,EAAa/F,OAAO+G,OAAOhB,IAAMc,EAAGhH,UAAYkG,EAAElG,UAAW,IAAIgH,GCTrCG,CAAAA,EAAAA,GA4B5CR,EAAA3G,UAAAE,WAAA,WACE,OAAOX,KAAKK,QAAUC,GAMxB8G,EAAA3G,UAAAC,WAAA,WACE,OAAOV,KAAKK,QAAUC,uBA1CzBqB,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,qBACVgG,OAAQ,CAAC,iBAET/F,SAAA,m8FAOCQ,EAAAA,MAAKV,KAAA,CAAC,+BAKNU,EAAAA,MAAKV,KAAA,CAAC,0BAMNU,EAAAA,MAAKV,KAAA,CAAC,yBAONU,EAAAA,MAAKV,KAAA,CAAC,YAeTwF,EA5CA,CAM8CH,GCjB9Ca,EAAA,WAWA,SAAAA,KAmBA,2BAnBCC,EAAAA,SAAQnG,KAAA,CAAC,CACRoG,QAAS,CACPC,EAAAA,aACAC,EAAAA,cACAC,EAAAA,gBACAC,EAAAA,cAEFC,aAAc,CACZ7F,EACA7C,EACAyH,GAEFkB,QAAS,CACP9F,EACA7C,OAKJmI,EA9BA","sourcesContent":["import { Component, ElementRef, HostBinding, AfterViewInit, OnInit, Renderer2,\n         ChangeDetectionStrategy, ChangeDetectorRef, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nexport enum StepState {\n  None = 'none',\n  Required = 'required',\n  Complete = 'complete',\n}\n\n@Component({\n  selector: 'td-nav-step, a[td-nav-step]',\n  styleUrls: ['./nav-step.component.scss'],\n  templateUrl: './nav-step.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdNavStepComponent implements AfterViewInit, OnInit {\n\n  private _displayStep: boolean = true;\n  private _displayLine: boolean = true;\n  private _width: number = 0;\n  private _active: boolean = false;\n\n  // Number to display in step header\n  number: number;\n\n  /**\n   * routerLink?: string\n   * routerLink to navigate to\n   * Defaults to empty\n   */\n  @Input('routerLink') routerLink: string;\n\n  /**\n   * state?: StepState\n   * state of step\n   * Defaults to none\n   */\n  @Input('state') state: StepState = StepState.None;\n\n  /**\n   * sublabel?: string\n   * Sublabel to display in step header\n   * Defaults to empty\n   */\n  @Input('sublabel') sublabel: string;\n\n  constructor(private _elementRef: ElementRef,\n    private router: Router,\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'mat-button');\n  }\n\n  isRequired(): boolean {\n    return true;\n  }\n\n  isComplete(): boolean {\n    return true;\n  }\n\n  get displayStep(): boolean {\n    return this._displayStep;\n  }\n\n  /**\n   * Whether to display the step or not\n   */\n  set displayStep(shouldDisplay: boolean) {\n    this._displayStep = shouldDisplay;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get displayLine(): boolean {\n    return this._displayLine;\n  }\n\n  /**\n   * Whether to display the step or not\n   */\n  set displayLine(shouldDisplay: boolean) {\n    this._displayLine = shouldDisplay;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Whether step is active\n   */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * Width of the DOM element of the step\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * Gets the display style of the crumb\n   */\n  @HostBinding('style.display')\n  get displayBinding(): string {\n    // Set the display to none on the component, just in case the end user is hiding\n    // and showing them instead of the component doing itself for reasons like responsive\n    return this._displayStep ? undefined : 'none';\n  }\n\n  ngAfterViewInit(): void {\n    // set the width from the actual rendered DOM element\n    Promise.resolve().then(() => {\n      this._width = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width;\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnInit(): void {\n    // Set this step to active if the step route and active route are the same\n    if (this.router.url === this.routerLink) {\n      this._active = true;\n    }\n  }\n\n}\n","import { Component, ContentChildren, QueryList, OnInit, OnDestroy, ChangeDetectionStrategy, \n         AfterContentInit, DoCheck, ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { Subscription, Subject, fromEvent, merge } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\nimport { TdNavStepComponent } from '../nav-step/nav-step.component';\n\n@Component({\n  selector: 'td-horizontal-nav-stepper',\n  styleUrls: ['./horizontal-nav-stepper.component.scss'],\n  templateUrl: './horizontal-nav-stepper.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdHorizontalStepperComponent implements OnInit, DoCheck, AfterContentInit, OnDestroy {\n\n  private _resizeSubscription: Subscription = Subscription.EMPTY;\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _resizing: boolean = false;\n  private _showLeftArrow: boolean = false;\n  private _showRightArrow: boolean = false;\n  private _leftHidden: number = 0;\n  private _rightHidden: number = 0;\n\n  // all the sub components, which are the individual steps\n  @ContentChildren(TdNavStepComponent) _steps: QueryList<TdNavStepComponent>;\n  // the list of hidden steps not shown right now (responsive)\n  hiddenSteps: TdNavStepComponent[] = new Array();\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this._resizeSubscription = merge(\n      fromEvent(window, 'resize').pipe(\n        debounceTime(10),\n      ),\n      this._widthSubject.asObservable().pipe(\n        distinctUntilChanged(),\n      ),\n    ).subscribe(() => {\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this.displayWidthAvailableSteps();\n          this._resizing = false;\n          this._changeDetectorRef.markForCheck();\n        }, 100);\n      }\n    });\n  }\n\n  ngDoCheck(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.setStepSettings();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._resizeSubscription.unsubscribe();\n  }\n\n  /*\n  * Current width of the element container\n  */\n  get nativeElementWidth(): number {\n    let element: HTMLElement = (<HTMLElement>this._elementRef.nativeElement);\n\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    let style: CSSStyleDeclaration = window.getComputedStyle(element);\n    let borderLeft: number = parseInt(style.borderLeft, 10);\n    let borderRight: number = parseInt(style.borderRight, 10);\n    let marginLeft: number = parseInt(style.marginLeft, 10);\n    let marginRight: number = parseInt(style.marginRight, 10);\n    let paddingLeft: number = parseInt(style.paddingLeft, 10);\n    let paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return element.getBoundingClientRect().width - borderLeft - borderRight - marginLeft - marginRight - paddingLeft - paddingRight;\n  }\n\n  /**\n   * The total count of individual steps\n   */\n  get count(): number {\n    return this._steps ? this._steps.length : 0;\n  }\n\n  /**\n   * Should we show the left Arrow\n   */\n  get showLeftArrow(): boolean {\n    return this._showLeftArrow;\n  }\n\n  /**\n   * Should we show the right Arrow\n   */\n  get showRightArrow(): boolean {\n    return this._showRightArrow;\n  }\n\n  public showHiddenLeftStep(): void {\n    let stepsArray: TdNavStepComponent[] = this._steps.toArray();\n    // show the left one\n    stepsArray[this._leftHidden - 1].displayStep = true;\n    this.hiddenSteps.splice(this._leftHidden - 1, 1);\n    this._leftHidden--;\n    // If no more hidden steps then hide left arrow\n    if (this._leftHidden === 0) {\n      this._showLeftArrow = false;\n    }\n\n    // hide the right one\n    stepsArray[stepsArray.length - (this._rightHidden + 1)].displayStep = false;\n    stepsArray[stepsArray.length - (this._rightHidden + 2)].displayLine = false;\n    this.hiddenSteps.push(stepsArray[stepsArray.length - 1]);\n    this._rightHidden++;\n\n    this._showRightArrow = true;\n  }\n\n  public showHiddenRightStep(): void {\n    let stepsArray: TdNavStepComponent[] = this._steps.toArray();\n    // show the right one\n    stepsArray[stepsArray.length - this._rightHidden].displayStep = true;\n    stepsArray[stepsArray.length - (this._rightHidden + 1)].displayLine = true;\n    this.hiddenSteps.pop();\n    this._rightHidden--;\n    // If no more hidden steps then hide right arrow\n    if (this._rightHidden === 0) {\n      this._showRightArrow = false;\n    }\n\n    // hide the left one\n    stepsArray[this._leftHidden].displayStep = false;\n    this.hiddenSteps.push(stepsArray[this._leftHidden]);\n    this._leftHidden++;\n\n    this._showLeftArrow = true;\n  }\n\n  /**\n   * Set the step line separators and display numbers\n   */\n  private setStepSettings(): void {\n    let stepsArray: TdNavStepComponent[] = this._steps.toArray();\n    if (stepsArray.length > 0) {\n      // don't show the icon on the last breadcrumb\n      stepsArray[stepsArray.length - 1].displayLine = false;\n    }\n    // set the index number of the step so can display that number in circle\n    stepsArray.forEach((step: TdNavStepComponent, index: number) => {\n      step.number = index + 1;\n    });\n  }\n\n  private displayWidthAvailableSteps(): void {\n    let curTotStepWidth: number = 0;\n    let stepsArray: TdNavStepComponent[] = this._steps.toArray();\n    // calculate the current width of the shown steps\n    for (let i: number = this.hiddenSteps.length; i < stepsArray.length; i++) {\n      curTotStepWidth += stepsArray[i].width;\n    }\n    // get the active step index\n    let activeIndex: number = stepsArray.findIndex((step: TdNavStepComponent) => {\n      return step.active === true;\n    });\n    // hide the first step if window size is smaller than all the step sizes\n    if (this.nativeElementWidth < curTotStepWidth) {\n      // determine if the active step is in the first or second half of the list\n      // and check that all the left ones aren't already hidden (2nd check after && does that)\n      // and hide on the opposite side of that\n      if ((activeIndex >= stepsArray.length / 2) && (this._leftHidden < activeIndex)) {\n        // left\n        this._showRightArrow = false;\n        this._showLeftArrow = true;\n        this._leftHidden++;\n        stepsArray[this._leftHidden - 1].displayStep = false;\n        this.hiddenSteps.push(stepsArray[this.hiddenSteps.length]);\n      // Check to see that all the possible ones on the right aren't already hidden\n      } else if (this._rightHidden < stepsArray.length - activeIndex) {\n        // right\n        this._showRightArrow = true;\n        this._showLeftArrow = false;\n        this._rightHidden++;\n        stepsArray[stepsArray.length - this._rightHidden].displayStep = false;\n        this.hiddenSteps.push(stepsArray[stepsArray.length - this._rightHidden]);\n      }\n      this.displayWidthAvailableSteps();\n    } else {\n      // loop over all the hidden steps and see if adding them back in will\n      // fit in the current window size\n      let totalHidden: number = this.hiddenSteps.length - 1;\n      for (let i: number = totalHidden; i >= 0; i--) {\n        let hiddenStepWidth: number = stepsArray[i].width;\n        if ((curTotStepWidth + hiddenStepWidth) < this.nativeElementWidth) {\n          // Determine if the active step is in the first or second half of the list\n          // and if its right and there are hidden left steps\n          // or if it left and there are no right hidden ones and some left hidden (using arrows can cause it to be unbalanced)\n          // then show the hidden ones on the left\n          if ((activeIndex >= stepsArray.length / 2 && this._leftHidden > 0) || \n              (activeIndex < stepsArray.length / 2 && this._rightHidden === 0 && this._leftHidden > 0)) {\n            // left\n            stepsArray[this._leftHidden - 1].displayStep = true;\n            this.hiddenSteps.shift();\n            this._leftHidden--;\n            // If no more hidden steps then hide left arrow\n            if (this._leftHidden === 0) {\n              this._showLeftArrow = false;\n            }\n          // Check if there are any on the right hidden and show them\n          } else if (this._rightHidden > 0) {\n            // right\n            stepsArray[stepsArray.length - this._rightHidden].displayStep = true;\n            this.hiddenSteps.pop();\n            this._rightHidden--;\n            // If no more hidden steps then hide right arrow\n            if (this._rightHidden === 0) {\n              this._showRightArrow = false;\n            }\n          }\n          // recalculate the total width based on adding back in a step\n          let newTotStepWidth: number = 0;\n          for (let j: number = this.hiddenSteps.length; j < stepsArray.length; j++) {\n            newTotStepWidth += stepsArray[j].width;\n          }\n          curTotStepWidth = newTotStepWidth;\n        } else if (i === totalHidden) {\n          // need to break out of loop here because the first in the hidden\n          // list can't fit in current window size\n          break;\n        }\n      }\n    }\n  }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, Input } from '@angular/core';\n\nimport { ICanDisable, mixinDisabled, ICanDisableRipple, mixinDisableRipple } from '@covalent/core/common';\n\nimport { StepState } from '../nav-step/nav-step.component';\n\nexport class TdNavStepHeaderBase {}\n\n/* tslint:disable-next-line */\nexport const _TdNavStepHeaderMixinBase = mixinDisableRipple(mixinDisabled(TdNavStepHeaderBase));\n\n@Component({\n  selector: 'td-nav-step-header',\n  inputs: ['disableRipple'],\n  styleUrls: ['./nav-step-header.component.scss' ],\n  templateUrl: './nav-step-header.component.html',\n})\nexport class TdNavStepHeaderComponent extends _TdNavStepHeaderMixinBase implements ICanDisable, ICanDisableRipple {\n\n  /**\n   * Should display the line after the step\n   */\n  @Input('displayLine') displayLine: boolean;\n\n  /**\n   * Number assigned to [TdNavStepHeaderComponent].\n   */\n  @Input('number') number: number;\n\n  /**\n   * active?: boolean\n   * Sets for active/inactive states on header.\n   */\n  @Input('active') active: boolean;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets styles for state of header.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state') state: StepState = StepState.None;\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this.state === StepState.Complete;\n  }\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Required | 'required'], else 'false'.\n   */\n  isRequired(): boolean {\n    return this.state === StepState.Required;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { TdHorizontalStepperComponent } from './horizontal-nav-stepper/horizontal-nav-stepper.component';\nimport { TdNavStepComponent } from './nav-step/nav-step.component';\nimport { TdNavStepHeaderComponent } from './nav-step-header/nav-step-header.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatRippleModule,\n    PortalModule,\n  ],\n  declarations: [\n    TdHorizontalStepperComponent,\n    TdNavStepComponent,\n    TdNavStepHeaderComponent,\n  ],\n  exports: [\n    TdHorizontalStepperComponent,\n    TdNavStepComponent,\n  ],\n})\nexport class CovalentNavStepperModule {\n\n}\n"]}