{
  "version": 3,
  "file": "covalent-experimental-breadcrumbs.umd.js",
  "sources": [
    "ng://@covalent/experimental/breadcrumbs/out/breadcrumbs.module.ts",
    "ng://@covalent/experimental/breadcrumbs/out/breadcrumbs.component.ts",
    "ng://@covalent/experimental/breadcrumbs/out/breadcrumb/breadcrumb.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdBreadcrumbsComponent } from './breadcrumbs.component';\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TdBreadcrumbsComponent,\n    TdBreadcrumbComponent,\n  ],\n  exports: [\n    TdBreadcrumbsComponent,\n    TdBreadcrumbComponent,\n  ],\n})\nexport class CovalentBreadcrumbsModule {\n\n}\n",
    "import {\n  Component,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  DoCheck,\n  ChangeDetectorRef,\n  ElementRef,\n  Input,\n} from '@angular/core';\n\nimport {\n  Subscription,\n  Subject,\n  fromEvent,\n  merge,\n} from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n} from 'rxjs/operators';\n\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'td-breadcrumbs',\n  styles: [`:host{display:block;width:100%}:host .td-breadcrumbs{white-space:nowrap}`],\n  template: `<div class=\"td-breadcrumbs\">\n  <ng-content></ng-content>\n</div>\n`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbsComponent implements OnInit, DoCheck, AfterContentInit, OnDestroy {\n\n  private _resizeSubscription: Subscription = Subscription.EMPTY;\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _resizing: boolean = false;\n\n  // all the sub components, which are the individual breadcrumbs\n  @ContentChildren(TdBreadcrumbComponent) _breadcrumbs: QueryList<TdBreadcrumbComponent>;\n  // the list of hidden breadcrumbs not shown right now (responsive)\n  hiddenBreadcrumbs: TdBreadcrumbComponent[] = new Array();\n\n  /**\n   * Sets the icon url shown between breadcrumbs. Defaults to right chevron.\n   */\n  @Input('separatorIcon') separatorIcon: string = 'navigate_next';\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this._resizeSubscription = merge(\n      fromEvent(window, 'resize').pipe(\n        debounceTime(10),\n      ),\n      this._widthSubject.asObservable().pipe(\n        distinctUntilChanged(),\n      ),\n    ).subscribe(() => {\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this.displayWidthAvailableCrumbs();\n          this._resizing = false;\n          this._changeDetectorRef.markForCheck();\n        }, 100);\n      }\n    });\n  }\n\n  ngDoCheck(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.setCrumbIcons();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._resizeSubscription.unsubscribe();\n  }\n\n  /*\n  * Current width of the element container\n  */\n  get nativeElementWidth(): number {\n    let element: HTMLElement = (<HTMLElement>this._elementRef.nativeElement);\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    let style: CSSStyleDeclaration = window.getComputedStyle(element);\n    let borderLeft: number = parseInt(style.borderLeft, 10);\n    let borderRight: number = parseInt(style.borderRight, 10);\n    let marginLeft: number = parseInt(style.marginLeft, 10);\n    let marginRight: number = parseInt(style.marginRight, 10);\n    let paddingLeft: number = parseInt(style.paddingLeft, 10);\n    let paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return element.getBoundingClientRect().width - borderLeft - borderRight - marginLeft - marginRight - paddingLeft - paddingRight;\n  }\n\n  /**\n   * The total count of individual breadcrumbs\n   */\n  get count(): number {\n    return this._breadcrumbs ? this._breadcrumbs.length : 0;\n  }\n\n  /**\n   * Set the crumb icon separators\n   */\n  private setCrumbIcons(): void {\n    let breadcrumbArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    if (breadcrumbArray.length > 0) {\n      // don't show the icon on the last breadcrumb\n      breadcrumbArray[breadcrumbArray.length - 1]._displayIcon = false;\n    }\n    breadcrumbArray.forEach((breadcrumb: TdBreadcrumbComponent) => {\n      breadcrumb.separatorIcon = this.separatorIcon;\n    });\n  }\n\n  private displayWidthAvailableCrumbs(): void {\n    let curTotCrumbWidth: number = 0;\n    let crumbsArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    // calculate the current width of the shown breadcrumbs\n    for (let i: number = this.hiddenBreadcrumbs.length; i < crumbsArray.length; i++) {\n      curTotCrumbWidth += crumbsArray[i].width;\n    }\n    // hide the first bread crumb if window size is smaller than all the crumb sizes\n    if (this.nativeElementWidth < curTotCrumbWidth) {\n      crumbsArray[this.hiddenBreadcrumbs.length].displayCrumb = false;\n      this.hiddenBreadcrumbs.push(crumbsArray[this.hiddenBreadcrumbs.length]);\n      this.displayWidthAvailableCrumbs();\n    } else {\n      // loop over all the hidden crumbs and see if adding them back in will\n      // fit in the current window size\n      let totalHidden: number = this.hiddenBreadcrumbs.length - 1;\n      for (let i: number = totalHidden; i >= 0; i--) {\n        let hiddenCrumbWidth: number = crumbsArray[i].width;\n        if ((curTotCrumbWidth + hiddenCrumbWidth) < this.nativeElementWidth) {\n          crumbsArray[i].displayCrumb = true;\n          crumbsArray[i + 1]._displayIcon = true;\n          this.hiddenBreadcrumbs.pop();\n          // recalculate the total width based on adding back in a crumb\n          let newTotCrumbWidth: number = 0;\n          for (let j: number = this.hiddenBreadcrumbs.length; j < crumbsArray.length; j++) {\n            newTotCrumbWidth += crumbsArray[j].width;\n          }\n          curTotCrumbWidth = newTotCrumbWidth;\n        } else if (i === totalHidden) {\n          // need to break out of loop here because the first in the hidden\n          // list can't fit in current window size\n          break;\n        }\n      }\n    }\n  }\n\n}\n",
    "import {\n  Component,\n  ElementRef,\n  Renderer2,\n  HostBinding,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'td-breadcrumb, a[td-breadcrumb]',\n  styles: [`:host .td-breadcrumb{height:48px;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;max-width:100%;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}:host .td-breadcrumb ::ng-deep>*{margin:0 10px}:host .td-breadcrumb-separator-icon{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;vertical-align:middle}:host.mat-button{min-width:0;padding:0}`],\n  template: `<span *ngIf=\"displayCrumb\" class=\"td-breadcrumb\">\n  <ng-content></ng-content>\n  <mat-icon *ngIf=\"_displayIcon\"\n            class=\"td-breadcrumb-separator-icon\"\n            [style.cursor]=\"'default'\"\n            (click)=\"_handleIconClick($event)\">\n    {{separatorIcon}}\n  </mat-icon>\n</span>\n`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbComponent implements AfterViewInit {\n\n  private _displayCrumb: boolean = true;\n  private _width: number = 0;\n  // Sets the icon url shown between breadcrumbs. Defaults to right chevron\n  separatorIcon: string = 'navigate_next';\n  // Should show the right chevron or not before the label\n  _displayIcon: boolean = true;\n\n  get displayCrumb(): boolean {\n    return this._displayCrumb;\n  }\n\n  /**\n   * Whether to display the crumb or not\n   */\n  set displayCrumb(shouldDisplay: boolean) {\n    this._displayCrumb = shouldDisplay;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Width of the DOM element of the crumb\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * Gets the display style of the crumb\n   */\n  @HostBinding('style.display')\n  get displayBinding(): string {\n    // Set the display to none on the component, just in case the end user is hiding\n    // and showing them instead of the component doing itself for reasons like responsive\n    return this._displayCrumb ? undefined : 'none';\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'mat-button');\n  }\n\n  ngAfterViewInit(): void {\n    // set the width from the actual rendered DOM element\n    this._width = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Stop click propagation when clicking on icon\n   */\n  _handleIconClick(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n}\n"
  ],
  "names": [
    "MatIconModule",
    "CommonModule",
    "NgModule",
    "Input",
    "ContentChildren",
    "ChangeDetectorRef",
    "ElementRef",
    "ChangeDetectionStrategy",
    "Component",
    "merge",
    "fromEvent",
    "debounceTime",
    "distinctUntilChanged",
    "Subject",
    "Subscription",
    "HostBinding",
    "Renderer2"
  ],
  "mappings": "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"
}
