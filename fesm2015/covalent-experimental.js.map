{"version":3,"file":"covalent-experimental.js.map","sources":["ng://@covalent/experimental/template-rename-me-experiment-module/rename-me.component.ts","ng://@covalent/experimental/template-rename-me-experiment-module/rename-me.module.ts","ng://@covalent/experimental/schematics/src/ng-add/version-names.ts","ng://@covalent/experimental/schematics/src/ng-add/components.ts","ng://@covalent/experimental/schematics/src/ng-add/index.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'td-renameMe',\n  styleUrls: ['./rename-me.component.scss'],\n  templateUrl: './rename-me.component.html',\n})\nexport class TdRenameMeComponent {\n\n  constructor() {\n    // stub\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TdRenameMeComponent } from './rename-me.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TdRenameMeComponent,\n  ],\n  exports: [\n    TdRenameMeComponent,\n  ],\n})\nexport class CovalentRenameMeModule {\n\n}\n","export const covalentCoreVersion: string = '2.0.0';\nexport const materialVersion: string = '7.0.1';\n","import { ISchema } from './schema';\n\nexport interface IComponent {\n  enabled(options: ISchema): boolean;\n  dependency(): string;\n}\n\nexport class DynamicForms implements IComponent {\n  public enabled(options: ISchema): boolean {\n    return options.dynamicForms;\n  }\n\n  public dependency(): string {\n    return '@covalent/dynamic-forms';\n  }\n}\n\nexport class Http implements IComponent {\n  public enabled(options: ISchema): boolean {\n    return options.http;\n  }\n\n  public dependency(): string {\n    return '@covalent/http';\n  }\n}\n\nexport class Highlight implements IComponent {\n  public enabled(options: ISchema): boolean {\n    return options.highlight;\n  }\n\n  public dependency(): string {\n    return '@covalent/highlight';\n  }\n}\n\nexport class Markdown implements IComponent {\n  public enabled(options: ISchema): boolean {\n    return options.markdown;\n  }\n\n  public dependency(): string {\n    return '@covalent/markdown';\n  }\n}\n\nexport class FlavoredMarkdown implements IComponent {\n  public enabled(options: ISchema): boolean {\n    return options.flavoredMarkdown;\n  }\n\n  public dependency(): string {\n    return '@covalent/flavored-markdown';\n  }\n}\n","import { Rule, chain, Tree, mergeWith, url, apply, branchAndMerge, template } from '@angular-devkit/schematics';\nimport { addPackageToPackageJson } from '@angular/material/schematics/ng-add/package-config';\nimport { ISchema } from './schema';\nimport { covalentCoreVersion, materialVersion } from './version-names';\nimport { IComponent, DynamicForms, Http, Highlight, Markdown, FlavoredMarkdown } from './components';\nimport { strings } from '@angular-devkit/core';\nimport { getProjectFromWorkspace, getProjectTargetOptions } from '@angular/cdk/schematics';\nimport { getWorkspace } from '@schematics/angular/utility/config';\nimport { WorkspaceSchema, WorkspaceProject } from '@angular-devkit/core/src/workspace';\n\nexport function addDependenciesAndFiles(options: ISchema): Rule {\n  return chain([\n    (host: Tree) => {\n      addPackageToPackageJson(host, '@angular/material', `~${materialVersion}`);\n      addPackageToPackageJson(host, '@covalent/core', `~${covalentCoreVersion}`);\n\n      let components: IComponent[] = [new DynamicForms(), new Http(), new Highlight(), new Markdown(), new FlavoredMarkdown()];\n\n      components.forEach((component: IComponent) => {\n        if (component.enabled(options)) {\n          addPackageToPackageJson(host, component.dependency(), `~${covalentCoreVersion}`);\n        }\n      });\n    },\n    mergeFiles(options),\n    addThemeToAngularJson(),\n  ]);\n}\n\nfunction mergeFiles(options: ISchema): Rule {\n  const templateSource: any = apply(\n    url('./files'),\n    [\n      template({\n        ...strings,\n        ...options,\n      }),\n    ],\n  );\n  return branchAndMerge(mergeWith(templateSource));\n}\n\nfunction addThemeToAngularJson(): Rule {\n  return (host: Tree) => {\n    const workspace: WorkspaceSchema = getWorkspace(host);\n    const project: WorkspaceProject = getProjectFromWorkspace(workspace);\n    const targetOptions: any = getProjectTargetOptions(project, 'build');\n    const assetPath: string =  `src/theme.scss`;\n    const prebuiltThemePathSegment: string = `src/styles.scss`;\n\n    if (!targetOptions.styles) {\n      targetOptions.styles = [assetPath];\n    } else {\n      const existingStyles: any = targetOptions.styles.map((s: any) => typeof s === 'string' ? s : s.input);\n\n      for (let [index, stylePath] of existingStyles.entries()) {\n        if (stylePath === assetPath) {\n          return;\n        }\n        if (stylePath.includes(prebuiltThemePathSegment)) {\n          targetOptions.styles.splice(index, 0);\n        }\n      }\n      targetOptions.styles.unshift(assetPath);\n    }\n    host.overwrite('angular.json', JSON.stringify(workspace, undefined, 2));\n    return host;\n  };\n}\n"],"names":[],"mappings":"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"}
