{
  "version": 3,
  "file": "covalent-experimental.js",
  "sources": [
    "ng://@covalent/experimental/out/tab-select/tab-select.module.ts",
    "ng://@covalent/experimental/out/tab-select/tab-select.component.ts",
    "ng://@covalent/experimental/out/tab-select/tab-option.component.ts",
    "ng://@covalent/experimental/out/breadcrumbs/breadcrumbs.module.ts",
    "ng://@covalent/experimental/out/breadcrumbs/breadcrumbs.component.ts",
    "ng://@covalent/experimental/out/breadcrumbs/breadcrumb/breadcrumb.component.ts",
    "ng://@covalent/experimental/out/template-rename-me-experiment-module/rename-me.module.ts",
    "ng://@covalent/experimental/out/template-rename-me-experiment-module/rename-me.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { TdTabSelectComponent } from './tab-select.component';\nimport { TdTabOptionComponent } from './tab-option.component';\n\n@NgModule({\n  declarations: [\n    TdTabSelectComponent,\n    TdTabOptionComponent,\n  ], // directives, components, and pipes owned by this NgModule\n  imports: [\n    /** Angular Modules */\n    CommonModule,\n    FormsModule,\n    /** Material Modules */\n    PortalModule,\n    MatTabsModule,\n  ], // modules needed to run this module\n  exports: [\n    TdTabSelectComponent,\n    TdTabOptionComponent,\n  ],\n})\nexport class CovalentTabSelectModule {}\n",
    "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  AfterContentInit,\n  forwardRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\nimport { ThemePalette } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable,\n          mixinDisabled,\n          IControlValueAccessor,\n          mixinControlValueAccessor,\n          ICanDisableRipple,\n          mixinDisableRipple,\n} from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdTabOptionComponent } from './tab-option.component';\n\nexport class TdTabSelectBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdTabSelectMixinBase = mixinControlValueAccessor(mixinDisabled(mixinDisableRipple(TdTabSelectBase)));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdTabSelectComponent),\n    multi: true,\n  }],\n  selector: 'td-tab-select',\n  template: `<mat-tab-group [attr.mat-stretch-tabs]=\"stretchTabs ? true : undefined\"\n                [backgroundColor]=\"backgroundColor\"\n                [color]=\"color\"\n                [disableRipple]=\"disableRipple\"\n                [selectedIndex]=\"selectedIndex\"\n                (selectedIndexChange)=\"selectedIndexChange($event)\">\n  <ng-template let-tabOption\n                ngFor\n                [ngForOf]=\"tabOptions\">\n    <mat-tab [disabled]=\"tabOption.disabled || disabled\">\n      <ng-template matTabLabel>\n        <ng-template [cdkPortalOutlet]=\"tabOption.content\">\n        </ng-template>\n      </ng-template>\n    </mat-tab>\n  </ng-template>\n</mat-tab-group>\n`,\n  styles: [``],\n  /* tslint:disable-next-line */\n  inputs: ['value', 'disabled', 'disableRipple'],\n})\nexport class TdTabSelectComponent extends _TdTabSelectMixinBase\n                                  implements IControlValueAccessor, ICanDisable, ICanDisableRipple, OnInit, AfterContentInit, OnDestroy {\n\n  private _subs: Subscription[] = [];\n\n  private _values: any[] = [];\n  private _selectedIndex: number = 0;\n  private _stretchTabs: boolean = false;\n\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n\n  /**\n   * Gets all tab option children\n   */\n  @ContentChildren(TdTabOptionComponent) readonly _tabOptions: QueryList<TdTabOptionComponent>;\n\n  get tabOptions(): TdTabOptionComponent[] {\n    return this._tabOptions ? this._tabOptions.toArray() : undefined;\n  }\n\n  /**\n   * Makes the tabs stretch to fit the parent container.\n   */\n  @Input('stretchTabs')\n  set stretchTabs(stretchTabs: boolean) {\n    this._stretchTabs = coerceBooleanProperty(stretchTabs);\n  }\n  get stretchTabs(): boolean {\n    return this._stretchTabs;\n  }\n\n  /**\n   * Color of the tab group.\n   */\n  @Input('color') color: ThemePalette;\n\n  /**\n   * Background color of the tab group.\n   */\n  @Input('backgroundColor') backgroundColor: ThemePalette;\n\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    // subscribe to check if value changes and update the selectedIndex internally.\n    this._subs.push(\n      this.valueChanges.subscribe((value: any) => {\n        this._setValue(value);\n      }),\n    );\n  }\n\n  ngAfterContentInit(): void {\n    // subscribe to listen to any tab changes.\n    this._refreshValues();\n    this._subs.push(\n      this._tabOptions.changes.subscribe(() => {\n        this._refreshValues();\n      }),\n    );\n    // initialize value\n    Promise.resolve().then(() => {\n      this._setValue(this.value);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._subs && this._subs.length) {\n      this._subs.forEach((sub: Subscription) => {\n        sub.unsubscribe();\n      });\n    }\n  }\n\n  /**\n   * Method executed when user selects a different tab\n   * This updates the new selectedIndex and infers what value should be mapped to.\n   */\n  selectedIndexChange(selectedIndex: number): void {\n    this._selectedIndex = selectedIndex;\n    let value: any = this._values[selectedIndex];\n    this.value = value;\n    this.valueChange.emit(value);\n    this.onChange(value);\n  }\n\n  /**\n   * Refresh the values array whenever the number of tabs gets updated\n   */\n  private _refreshValues(): void {\n    this._values = this.tabOptions.map((tabOption: TdTabOptionComponent) => {\n      return tabOption.value;\n    });\n  }\n\n  /**\n   * Try to set value depending if its part of our options\n   * else set the value of the first tab.\n   */\n  private _setValue(value: any): void {\n    let index: number = this._values.indexOf(value);\n    if (index > -1) {\n      this._selectedIndex = index;\n    } else {\n      this.value = this._values.length ? this._values[0] : undefined;\n      this._selectedIndex = 0;\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n}\n",
    "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  TemplateRef,\n  OnInit,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { mixinDisabled, ICanDisable } from '@covalent/core/common';\n\nexport class TdTabOptionBase {\n  constructor(public _viewContainerRef: ViewContainerRef,\n              public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdTabOptionMixinBase = mixinDisabled(TdTabOptionBase);\n\n@Component({\n  selector: 'td-tab-option',\n  template: `<ng-template>\n  <ng-content></ng-content>\n</ng-template>\n`,\n  styles: [``],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  inputs: ['disabled'],\n})\nexport class TdTabOptionComponent extends _TdTabOptionMixinBase implements ICanDisable, OnInit {\n\n  private _contentPortal: TemplatePortal<any>;\n  get content(): TemplatePortal<any> {\n    return this._contentPortal;\n  }\n\n  @ViewChild(TemplateRef) _content: TemplateRef<any>;\n\n  /**\n   * Value to which the option will be binded to.\n   */\n  @Input('value') value: any;\n\n  constructor(_viewContainerRef: ViewContainerRef,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_viewContainerRef, _changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdBreadcrumbsComponent } from './breadcrumbs.component';\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TdBreadcrumbsComponent,\n    TdBreadcrumbComponent,\n  ],\n  exports: [\n    TdBreadcrumbsComponent,\n    TdBreadcrumbComponent,\n  ],\n})\nexport class CovalentBreadcrumbsModule {\n\n}\n",
    "import {\n  Component,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  DoCheck,\n  ChangeDetectorRef,\n  ElementRef,\n  Input,\n} from '@angular/core';\n\nimport {\n  Subscription,\n  Subject,\n  fromEvent,\n  merge,\n} from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n} from 'rxjs/operators';\n\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'td-breadcrumbs',\n  styles: [`:host{display:block;width:100%}:host .td-breadcrumbs{white-space:nowrap}`],\n  template: `<div class=\"td-breadcrumbs\">\n  <ng-content></ng-content>\n</div>\n`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbsComponent implements OnInit, DoCheck, AfterContentInit, OnDestroy {\n\n  private _resizeSubscription: Subscription = Subscription.EMPTY;\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _resizing: boolean = false;\n\n  // all the sub components, which are the individual breadcrumbs\n  @ContentChildren(TdBreadcrumbComponent) _breadcrumbs: QueryList<TdBreadcrumbComponent>;\n  // the list of hidden breadcrumbs not shown right now (responsive)\n  hiddenBreadcrumbs: TdBreadcrumbComponent[] = new Array();\n\n  /**\n   * Sets the icon url shown between breadcrumbs. Defaults to right chevron.\n   */\n  @Input('separatorIcon') separatorIcon: string = 'navigate_next';\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this._resizeSubscription = merge(\n      fromEvent(window, 'resize').pipe(\n        debounceTime(10),\n      ),\n      this._widthSubject.asObservable().pipe(\n        distinctUntilChanged(),\n      ),\n    ).subscribe(() => {\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this.displayWidthAvailableCrumbs();\n          this._resizing = false;\n          this._changeDetectorRef.markForCheck();\n        }, 100);\n      }\n    });\n  }\n\n  ngDoCheck(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.setCrumbIcons();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._resizeSubscription.unsubscribe();\n  }\n\n  /*\n  * Current width of the element container\n  */\n  get nativeElementWidth(): number {\n    let element: HTMLElement = (<HTMLElement>this._elementRef.nativeElement);\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    let style: CSSStyleDeclaration = window.getComputedStyle(element);\n    let borderLeft: number = parseInt(style.borderLeft, 10);\n    let borderRight: number = parseInt(style.borderRight, 10);\n    let marginLeft: number = parseInt(style.marginLeft, 10);\n    let marginRight: number = parseInt(style.marginRight, 10);\n    let paddingLeft: number = parseInt(style.paddingLeft, 10);\n    let paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return element.getBoundingClientRect().width - borderLeft - borderRight - marginLeft - marginRight - paddingLeft - paddingRight;\n  }\n\n  /**\n   * The total count of individual breadcrumbs\n   */\n  get count(): number {\n    return this._breadcrumbs ? this._breadcrumbs.length : 0;\n  }\n\n  /**\n   * Set the crumb icon separators\n   */\n  private setCrumbIcons(): void {\n    let breadcrumbArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    if (breadcrumbArray.length > 0) {\n      // don't show the icon on the last breadcrumb\n      breadcrumbArray[breadcrumbArray.length - 1]._displayIcon = false;\n    }\n    breadcrumbArray.forEach((breadcrumb: TdBreadcrumbComponent) => {\n      breadcrumb.separatorIcon = this.separatorIcon;\n    });\n  }\n\n  private displayWidthAvailableCrumbs(): void {\n    let curTotCrumbWidth: number = 0;\n    let crumbsArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    // calculate the current width of the shown breadcrumbs\n    for (let i: number = this.hiddenBreadcrumbs.length; i < crumbsArray.length; i++) {\n      curTotCrumbWidth += crumbsArray[i].width;\n    }\n    // hide the first bread crumb if window size is smaller than all the crumb sizes\n    if (this.nativeElementWidth < curTotCrumbWidth) {\n      crumbsArray[this.hiddenBreadcrumbs.length].displayCrumb = false;\n      this.hiddenBreadcrumbs.push(crumbsArray[this.hiddenBreadcrumbs.length]);\n      this.displayWidthAvailableCrumbs();\n    } else {\n      // loop over all the hidden crumbs and see if adding them back in will\n      // fit in the current window size\n      let totalHidden: number = this.hiddenBreadcrumbs.length - 1;\n      for (let i: number = totalHidden; i >= 0; i--) {\n        let hiddenCrumbWidth: number = crumbsArray[i].width;\n        if ((curTotCrumbWidth + hiddenCrumbWidth) < this.nativeElementWidth) {\n          crumbsArray[i].displayCrumb = true;\n          crumbsArray[i + 1]._displayIcon = true;\n          this.hiddenBreadcrumbs.pop();\n          // recalculate the total width based on adding back in a crumb\n          let newTotCrumbWidth: number = 0;\n          for (let j: number = this.hiddenBreadcrumbs.length; j < crumbsArray.length; j++) {\n            newTotCrumbWidth += crumbsArray[j].width;\n          }\n          curTotCrumbWidth = newTotCrumbWidth;\n        } else if (i === totalHidden) {\n          // need to break out of loop here because the first in the hidden\n          // list can't fit in current window size\n          break;\n        }\n      }\n    }\n  }\n\n}\n",
    "import {\n  Component,\n  ElementRef,\n  Renderer2,\n  HostBinding,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'td-breadcrumb, a[td-breadcrumb]',\n  styles: [`:host .td-breadcrumb{height:48px;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;max-width:100%;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}:host .td-breadcrumb ::ng-deep>*{margin:0 10px}:host .td-breadcrumb-separator-icon{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;vertical-align:middle}:host.mat-button{min-width:0;padding:0}`],\n  template: `<span *ngIf=\"displayCrumb\" class=\"td-breadcrumb\">\n  <ng-content></ng-content>\n  <mat-icon *ngIf=\"_displayIcon\"\n            class=\"td-breadcrumb-separator-icon\"\n            [style.cursor]=\"'default'\"\n            (click)=\"_handleIconClick($event)\">\n    {{separatorIcon}}\n  </mat-icon>\n</span>\n`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbComponent implements AfterViewInit {\n\n  private _displayCrumb: boolean = true;\n  private _width: number = 0;\n  // Sets the icon url shown between breadcrumbs. Defaults to right chevron\n  separatorIcon: string = 'navigate_next';\n  // Should show the right chevron or not before the label\n  _displayIcon: boolean = true;\n\n  get displayCrumb(): boolean {\n    return this._displayCrumb;\n  }\n\n  /**\n   * Whether to display the crumb or not\n   */\n  set displayCrumb(shouldDisplay: boolean) {\n    this._displayCrumb = shouldDisplay;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Width of the DOM element of the crumb\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * Gets the display style of the crumb\n   */\n  @HostBinding('style.display')\n  get displayBinding(): string {\n    // Set the display to none on the component, just in case the end user is hiding\n    // and showing them instead of the component doing itself for reasons like responsive\n    return this._displayCrumb ? undefined : 'none';\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'mat-button');\n  }\n\n  ngAfterViewInit(): void {\n    // set the width from the actual rendered DOM element\n    this._width = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Stop click propagation when clicking on icon\n   */\n  _handleIconClick(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TdRenameMeComponent } from './rename-me.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TdRenameMeComponent,\n  ],\n  exports: [\n    TdRenameMeComponent,\n  ],\n})\nexport class CovalentRenameMeModule {\n\n}\n",
    "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'td-renameMe',\n  styles: [``],\n  template: `<a href=\"https://github.com/Teradata/covalent\"> Test Link </a>\n`,\n})\nexport class TdRenameMeComponent {\n\n  constructor() {\n    // stub\n  }\n\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
