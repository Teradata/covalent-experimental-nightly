{"version":3,"file":"covalent-experimental.umd.js.map","sources":["ng://@covalent/experimental/template-rename-me-experiment-module/rename-me.component.ts","ng://@covalent/experimental/template-rename-me-experiment-module/rename-me.module.ts","ng://@covalent/experimental/breadcrumbs/breadcrumb/breadcrumb.component.ts","ng://@covalent/experimental/breadcrumbs/breadcrumbs.component.ts","ng://@covalent/experimental/breadcrumbs/breadcrumbs.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'td-renameMe',\n  styleUrls: ['./rename-me.component.scss'],\n  templateUrl: './rename-me.component.html',\n})\nexport class TdRenameMeComponent {\n\n  constructor() {\n    // stub\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TdRenameMeComponent } from './rename-me.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TdRenameMeComponent,\n  ],\n  exports: [\n    TdRenameMeComponent,\n  ],\n})\nexport class CovalentRenameMeModule {\n\n}\n","import {\n  Component,\n  ElementRef,\n  Renderer2,\n  HostBinding,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'td-breadcrumb, a[td-breadcrumb]',\n  styleUrls: ['./breadcrumb.component.scss'],\n  templateUrl: './breadcrumb.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbComponent implements AfterViewInit {\n\n  private _displayCrumb: boolean = true;\n  private _width: number = 0;\n  // Sets the icon url shown between breadcrumbs. Defaults to right chevron\n  separatorIcon: string = 'navigate_next';\n  // Should show the right chevron or not before the label\n  _displayIcon: boolean = true;\n\n  get displayCrumb(): boolean {\n    return this._displayCrumb;\n  }\n\n  /**\n   * Whether to display the crumb or not\n   */\n  set displayCrumb(shouldDisplay: boolean) {\n    this._displayCrumb = shouldDisplay;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Width of the DOM element of the crumb\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * Gets the display style of the crumb\n   */\n  @HostBinding('style.display')\n  get displayBinding(): string {\n    // Set the display to none on the component, just in case the end user is hiding\n    // and showing them instead of the component doing itself for reasons like responsive\n    return this._displayCrumb ? undefined : 'none';\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'mat-button');\n  }\n\n  ngAfterViewInit(): void {\n    // set the width from the actual rendered DOM element\n    this._width = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Stop click propagation when clicking on icon\n   */\n  _handleIconClick(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n}\n","import {\n  Component,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  DoCheck,\n  ChangeDetectorRef,\n  ElementRef,\n  Input,\n} from '@angular/core';\n\nimport {\n  Subscription,\n  Subject,\n  fromEvent,\n  merge,\n} from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n} from 'rxjs/operators';\n\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'td-breadcrumbs',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  templateUrl: './breadcrumbs.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbsComponent implements OnInit, DoCheck, AfterContentInit, OnDestroy {\n\n  private _resizeSubscription: Subscription = Subscription.EMPTY;\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _resizing: boolean = false;\n\n  // all the sub components, which are the individual breadcrumbs\n  @ContentChildren(TdBreadcrumbComponent) _breadcrumbs: QueryList<TdBreadcrumbComponent>;\n  // the list of hidden breadcrumbs not shown right now (responsive)\n  hiddenBreadcrumbs: TdBreadcrumbComponent[] = new Array();\n\n  /**\n   * Sets the icon url shown between breadcrumbs. Defaults to right chevron.\n   */\n  @Input('separatorIcon') separatorIcon: string = 'navigate_next';\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this._resizeSubscription = merge(\n      fromEvent(window, 'resize').pipe(\n        debounceTime(10),\n      ),\n      this._widthSubject.asObservable().pipe(\n        distinctUntilChanged(),\n      ),\n    ).subscribe(() => {\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this.displayWidthAvailableCrumbs();\n          this._resizing = false;\n          this._changeDetectorRef.markForCheck();\n        }, 100);\n      }\n    });\n  }\n\n  ngDoCheck(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.setCrumbIcons();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._resizeSubscription.unsubscribe();\n  }\n\n  /*\n  * Current width of the element container\n  */\n  get nativeElementWidth(): number {\n    let element: HTMLElement = (<HTMLElement>this._elementRef.nativeElement);\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    let style: CSSStyleDeclaration = window.getComputedStyle(element);\n    let borderLeft: number = parseInt(style.borderLeft, 10);\n    let borderRight: number = parseInt(style.borderRight, 10);\n    let marginLeft: number = parseInt(style.marginLeft, 10);\n    let marginRight: number = parseInt(style.marginRight, 10);\n    let paddingLeft: number = parseInt(style.paddingLeft, 10);\n    let paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return element.getBoundingClientRect().width - borderLeft - borderRight - marginLeft - marginRight - paddingLeft - paddingRight;\n  }\n\n  /**\n   * The total count of individual breadcrumbs\n   */\n  get count(): number {\n    return this._breadcrumbs ? this._breadcrumbs.length : 0;\n  }\n\n  /**\n   * Set the crumb icon separators\n   */\n  private setCrumbIcons(): void {\n    let breadcrumbArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    if (breadcrumbArray.length > 0) {\n      // don't show the icon on the last breadcrumb\n      breadcrumbArray[breadcrumbArray.length - 1]._displayIcon = false;\n    }\n    breadcrumbArray.forEach((breadcrumb: TdBreadcrumbComponent) => {\n      breadcrumb.separatorIcon = this.separatorIcon;\n    });\n  }\n\n  private displayWidthAvailableCrumbs(): void {\n    let curTotCrumbWidth: number = 0;\n    let crumbsArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    // calculate the current width of the shown breadcrumbs\n    for (let i: number = this.hiddenBreadcrumbs.length; i < crumbsArray.length; i++) {\n      curTotCrumbWidth += crumbsArray[i].width;\n    }\n    // hide the first bread crumb if window size is smaller than all the crumb sizes\n    if (this.nativeElementWidth < curTotCrumbWidth) {\n      crumbsArray[this.hiddenBreadcrumbs.length].displayCrumb = false;\n      this.hiddenBreadcrumbs.push(crumbsArray[this.hiddenBreadcrumbs.length]);\n      this.displayWidthAvailableCrumbs();\n    } else {\n      // loop over all the hidden crumbs and see if adding them back in will\n      // fit in the current window size\n      let totalHidden: number = this.hiddenBreadcrumbs.length - 1;\n      for (let i: number = totalHidden; i >= 0; i--) {\n        let hiddenCrumbWidth: number = crumbsArray[i].width;\n        if ((curTotCrumbWidth + hiddenCrumbWidth) < this.nativeElementWidth) {\n          crumbsArray[i].displayCrumb = true;\n          crumbsArray[i + 1]._displayIcon = true;\n          this.hiddenBreadcrumbs.pop();\n          // recalculate the total width based on adding back in a crumb\n          let newTotCrumbWidth: number = 0;\n          for (let j: number = this.hiddenBreadcrumbs.length; j < crumbsArray.length; j++) {\n            newTotCrumbWidth += crumbsArray[j].width;\n          }\n          curTotCrumbWidth = newTotCrumbWidth;\n        } else if (i === totalHidden) {\n          // need to break out of loop here because the first in the hidden\n          // list can't fit in current window size\n          break;\n        }\n      }\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdBreadcrumbsComponent } from './breadcrumbs.component';\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TdBreadcrumbsComponent,\n    TdBreadcrumbComponent,\n  ],\n  exports: [\n    TdBreadcrumbsComponent,\n    TdBreadcrumbComponent,\n  ],\n})\nexport class CovalentBreadcrumbsModule {\n\n}\n"],"names":["Component","NgModule","CommonModule","ChangeDetectionStrategy","ElementRef","Renderer2","ChangeDetectorRef","HostBinding","Subscription","Subject","merge","fromEvent","debounceTime","distinctUntilChanged","ContentChildren","Input","MatIconModule"],"mappings":";;;;;;;;;;AAAA;QASE;;SAEC;;oBATFA,cAAS,SAAC;wBACT,QAAQ,EAAE,aAAa;wBAEvB,8EAAyC;;qBAC1C;;;;QAOD,0BAAC;KAXD;;;;;;ACFA;QAKA;SAaC;;oBAbAC,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBACD,YAAY,EAAE;4BACZ,mBAAmB;yBACpB;wBACD,OAAO,EAAE;4BACP,mBAAmB;yBACpB;qBACF;;QAGD,6BAAC;KAbD;;;;;;;;;;;;;;;;ACLA;QAsDE,+BAAoB,WAAuB,EACvB,SAAoB,EACpB,kBAAqC;YAFrC,gBAAW,GAAX,WAAW,CAAY;YACvB,cAAS,GAAT,SAAS,CAAW;YACpB,uBAAkB,GAAlB,kBAAkB,CAAmB;YAtCjD,kBAAa,GAAY,IAAI,CAAC;YAC9B,WAAM,GAAW,CAAC,CAAC;;YAE3B,kBAAa,GAAW,eAAe,CAAC;;YAExC,iBAAY,GAAY,IAAI,CAAC;YAkC3B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;SACvE;QAjCD,sBAAI,+CAAY;;;gBAAhB;gBACE,OAAO,IAAI,CAAC,aAAa,CAAC;aAC3B;;;;;;;;gBAKD,UAAiB,aAAsB;gBACrC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;gBACnC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;aACxC;;;WARA;QAaD,sBAAI,wCAAK;;;;;;;gBAAT;gBACE,OAAO,IAAI,CAAC,MAAM,CAAC;aACpB;;;WAAA;QAKD,sBACI,iDAAc;;;;;;;gBADlB;;;gBAIE,OAAO,IAAI,CAAC,aAAa,GAAG,SAAS,GAAG,MAAM,CAAC;aAChD;;;WAAA;;;;QAQD,+CAAe;;;YAAf;;gBAEE,IAAI,CAAC,MAAM,GAAG,oBAAc,IAAI,CAAC,WAAW,CAAC,aAAa,IAAE,qBAAqB,EAAE,CAAC,KAAK,CAAC;gBAC1F,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;aACxC;;;;;;;;;QAKD,gDAAgB;;;;;YAAhB,UAAiB,KAAY;gBAC3B,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,KAAK,CAAC,cAAc,EAAE,CAAC;aACxB;;oBA9DFF,cAAS,SAAC;wBACT,QAAQ,EAAE,iCAAiC;wBAE3C,oUAA0C;wBAC1C,eAAe,EAAEG,4BAAuB,CAAC,MAAM;;qBAChD;;;;;wBAbCC,eAAU;wBACVC,cAAS;wBAITC,sBAAiB;;;;qCAwChBC,gBAAW,SAAC,eAAe;;QA2B9B,4BAAC;KAhED;;;;;;ACVA;QAiDE,gCAAoB,WAAuB,EAAU,kBAAqC;YAAtE,gBAAW,GAAX,WAAW,CAAY;YAAU,uBAAkB,GAAlB,kBAAkB,CAAmB;YAdlF,wBAAmB,GAAiBC,iBAAY,CAAC,KAAK,CAAC;YACvD,kBAAa,GAAoB,IAAIC,YAAO,EAAU,CAAC;YACvD,cAAS,GAAY,KAAK,CAAC;;YAKnC,sBAAiB,GAA4B,IAAI,KAAK,EAAE,CAAC;;;;YAKjC,kBAAa,GAAW,eAAe,CAAC;SAE+B;;;;QAE/F,yCAAQ;;;YAAR;gBAAA,iBAkBC;gBAjBC,IAAI,CAAC,mBAAmB,GAAGC,UAAK,CAC9BC,cAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,IAAI,CAC9BC,sBAAY,CAAC,EAAE,CAAC,CACjB,EACD,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,IAAI,CACpCC,8BAAoB,EAAE,CACvB,CACF,CAAC,SAAS,CAAC;oBACV,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE;wBACnB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,UAAU,CAAC;4BACT,KAAI,CAAC,2BAA2B,EAAE,CAAC;4BACnC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;4BACvB,KAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;yBACxC,EAAE,GAAG,CAAC,CAAC;qBACT;iBACF,CAAC,CAAC;aACJ;;;;QAED,0CAAS;;;YAAT;gBACE,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;oBACtD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;iBAClD;aACF;;;;QAED,mDAAkB;;;YAAlB;gBACE,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;aACxC;;;;QAED,4CAAW;;;YAAX;gBACE,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;aACxC;QAKD,sBAAI,sDAAkB;;;;;;;;;;YAAtB;;oBACM,OAAO,uBAA8B,IAAI,CAAC,WAAW,CAAC,aAAa,GAAC;;;oBAEpE,KAAK,GAAwB,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC;;oBAC7D,UAAU,GAAW,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,CAAC;;oBACnD,WAAW,GAAW,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC;;oBACrD,UAAU,GAAW,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,CAAC;;oBACnD,WAAW,GAAW,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC;;oBACrD,WAAW,GAAW,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC;;oBACrD,YAAY,GAAW,QAAQ,CAAC,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC;gBAE3D,OAAO,OAAO,CAAC,qBAAqB,EAAE,CAAC,KAAK,GAAG,UAAU,GAAG,WAAW,GAAG,UAAU,GAAG,WAAW,GAAG,WAAW,GAAG,YAAY,CAAC;aACjI;;;WAAA;QAKD,sBAAI,yCAAK;;;;;;;gBAAT;gBACE,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;aACzD;;;WAAA;;;;;;;;QAKO,8CAAa;;;;YAArB;gBAAA,iBASC;;oBARK,eAAe,GAA4B,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;gBAC1E,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;;oBAE9B,eAAe,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,YAAY,GAAG,KAAK,CAAC;iBAClE;gBACD,eAAe,CAAC,OAAO,CAAC,UAAC,UAAiC;oBACxD,UAAU,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC;iBAC/C,CAAC,CAAC;aACJ;;;;QAEO,4DAA2B;;;YAAnC;;oBACM,gBAAgB,GAAW,CAAC;;oBAC5B,WAAW,GAA4B,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;;gBAEtE,KAAK,IAAI,CAAC,GAAW,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC/E,gBAAgB,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;iBAC1C;;gBAED,IAAI,IAAI,CAAC,kBAAkB,GAAG,gBAAgB,EAAE;oBAC9C,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,YAAY,GAAG,KAAK,CAAC;oBAChE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;oBACxE,IAAI,CAAC,2BAA2B,EAAE,CAAC;iBACpC;qBAAM;;;;wBAGD,WAAW,GAAW,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC;oBAC3D,KAAK,IAAI,CAAC,GAAW,WAAW,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;;4BACzC,gBAAgB,GAAW,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK;wBACnD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,IAAI,IAAI,CAAC,kBAAkB,EAAE;4BACnE,WAAW,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;4BACnC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;4BACvC,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC;;;gCAEzB,gBAAgB,GAAW,CAAC;4BAChC,KAAK,IAAI,CAAC,GAAW,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC/E,gBAAgB,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;6BAC1C;4BACD,gBAAgB,GAAG,gBAAgB,CAAC;yBACrC;6BAAM,IAAI,CAAC,KAAK,WAAW,EAAE;;;4BAG5B,MAAM;yBACP;qBACF;iBACF;aACF;;oBApIFb,cAAS,SAAC;wBACT,QAAQ,EAAE,gBAAgB;wBAE1B,iFAA2C;wBAC3C,eAAe,EAAEG,4BAAuB,CAAC,MAAM;;qBAChD;;;;;wBAtBCC,eAAU;wBADVE,sBAAiB;;;;mCA+BhBQ,oBAAe,SAAC,qBAAqB;oCAOrCC,UAAK,SAAC,eAAe;;QAkHxB,6BAAC;KAtID;;;;;;AC3BA;QAOA;SAgBC;;oBAhBAd,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;4BACZc,kBAAa;yBACd;wBACD,YAAY,EAAE;4BACZ,sBAAsB;4BACtB,qBAAqB;yBACtB;wBACD,OAAO,EAAE;4BACP,sBAAsB;4BACtB,qBAAqB;yBACtB;qBACF;;QAGD,gCAAC;KAhBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
